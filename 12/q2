#!/bin/bash

set -eu

typeset -i WIDTH=1 HEIGHT=1 S_MARKER=0 E_MARKER=0 lineno=0 colno=0
typeset -ir INT_MAX='1<<63-1'

typeset v
typeset -i vi

typeset -a -i g

# S:1 a..z E
while read y x d; do
  ((x > WIDTH)) && WIDTH=x
  ((y > HEIGHT)) && HEIGHT=y
  ((d == 1 && (d++, S_MARKER = (WIDTH + 1) * y + x), 1))
  ((d == 27 && E_MARKER == 0 && (E_MARKER = (WIDTH + 1) * y + x), 1))
  g[(WIDTH + 1) * y + x]=d
done < <(
  while IFS='' read l; do
    : $((colno = 0))
    while ((colno < ${#l})); do
      v=${l:colno:1}
      let "(vi = 62#$v - 9) > 26 && (vi = (27 * ((vi - 31) == 0))), ++vi"
      echo "$lineno $colno $vi"
      : $((colno++))
    done
    : $((lineno++))
  done
)
let 'WIDTH++, HEIGHT++'

typeset -a -i dist
typeset -a -i prev
typeset -a -i Q

for v in "${!g[@]}"; do
  dist[v]=INT_MAX
  prev[v]=-1
  Q+=(v)
done

# q2
S_MARKER="${1:-S_MARKER}"
dist[S_MARKER]=0

typeset -i u
typeset -a -i n
while (("${#Q[@]}" > 0)); do
  set -- $(for v in "${!Q[@]}"; do echo "$v ${dist[Q[v]]}"; done | sort -k 2n | sed 1q)
  u="${1:?}"

  #((g[u] == 28)) && break # 28 => "E"

  unset Q[u]

  n=()
  (((u / WIDTH) > 0 && g[u] >= g[u - WIDTH] - 1)) && n+=(u-WIDTH)
  (((u / WIDTH) < (HEIGHT - 1) && g[u] >= g[u + WIDTH] - 1)) && n+=(u+WIDTH)
  (((u % WIDTH) > 0 && g[u] >= g[u - 1] - 1)) && n+=(u-1)
  (((u % WIDTH) < (WIDTH - 1) && g[u] >= g[u + 1] - 1)) && n+=(u+1)

  for ni in "${n[@]}"; do
    ((Q[ni])) || continue
    typeset -i alt='dist[u] + 1' #g[ni]'

    if ((alt <= dist[ni])); then
      dist[ni]=alt
      prev[ni]=u
    fi
  done
done

echo "from $((S_MARKER / WIDTH)),$((S_MARKER % WIDTH)): ${dist[E_MARKER]}"
exit

typeset -i upper=0
for vi in "${!g[@]}"; do
  ((vi && vi % WIDTH == 0)) && echo
  if ((g[vi] == 2)); then
    if ((dist[vi] != INT_MAX && dist[vi] >= upper)); then
      upper=dist[vi]
      echo -n "$(
        tput setaf 9
        tput bold
      )${dist[vi]}$(tput sgr0) "
    else
      echo -n "$(tput setaf 1)${dist[vi]}$(tput sgr0) "
    fi
  else
    echo -n "${dist[vi]} "
  fi
done
echo
exit

typeset -ai S
if ((prev[u] || u == S_MARKER)); then
  while ((u != -1)); do
    S+=(u)
    u=prev[u]
  done
fi
echo "${S[@]}"
echo "${#S[@]}"
